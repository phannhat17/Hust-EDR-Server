/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated/route'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as authSignInImport } from './routes/(auth)/sign-in'
import { Route as authOtpImport } from './routes/(auth)/otp'
import { Route as auth500Import } from './routes/(auth)/500'
import { Route as AuthenticatedRulesRouteImport } from './routes/_authenticated/rules/route'
import { Route as AuthenticatedLogsRouteImport } from './routes/_authenticated/logs/route'
import { Route as AuthenticatedIocsRouteImport } from './routes/_authenticated/iocs/route'
import { Route as AuthenticatedAlertsRouteImport } from './routes/_authenticated/alerts/route'
import { Route as AuthenticatedRulesIndexImport } from './routes/_authenticated/rules/index'
import { Route as AuthenticatedCommandsIndexImport } from './routes/_authenticated/commands/index'
import { Route as AuthenticatedAlertsIndexImport } from './routes/_authenticated/alerts/index'
import { Route as AuthenticatedAgentsIndexImport } from './routes/_authenticated/agents/index'
import { Route as AuthenticatedAgentsRegisterIndexImport } from './routes/_authenticated/agents/register/index'

// Create Virtual Routes

const errors503LazyImport = createFileRoute('/(errors)/503')()
const errors500LazyImport = createFileRoute('/(errors)/500')()
const errors404LazyImport = createFileRoute('/(errors)/404')()
const errors403LazyImport = createFileRoute('/(errors)/403')()
const errors401LazyImport = createFileRoute('/(errors)/401')()
const authSignUpLazyImport = createFileRoute('/(auth)/sign-up')()
const authSignIn2LazyImport = createFileRoute('/(auth)/sign-in-2')()
const authForgotPasswordLazyImport = createFileRoute(
  '/(auth)/forgot-password',
)()

// Create/Update Routes

const AuthenticatedRouteRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const errors503LazyRoute = errors503LazyImport
  .update({
    id: '/(errors)/503',
    path: '/503',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/503.lazy').then((d) => d.Route))

const errors500LazyRoute = errors500LazyImport
  .update({
    id: '/(errors)/500',
    path: '/500',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/500.lazy').then((d) => d.Route))

const errors404LazyRoute = errors404LazyImport
  .update({
    id: '/(errors)/404',
    path: '/404',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/404.lazy').then((d) => d.Route))

const errors403LazyRoute = errors403LazyImport
  .update({
    id: '/(errors)/403',
    path: '/403',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/403.lazy').then((d) => d.Route))

const errors401LazyRoute = errors401LazyImport
  .update({
    id: '/(errors)/401',
    path: '/401',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/401.lazy').then((d) => d.Route))

const authSignUpLazyRoute = authSignUpLazyImport
  .update({
    id: '/(auth)/sign-up',
    path: '/sign-up',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/sign-up.lazy').then((d) => d.Route))

const authSignIn2LazyRoute = authSignIn2LazyImport
  .update({
    id: '/(auth)/sign-in-2',
    path: '/sign-in-2',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/sign-in-2.lazy').then((d) => d.Route))

const authForgotPasswordLazyRoute = authForgotPasswordLazyImport
  .update({
    id: '/(auth)/forgot-password',
    path: '/forgot-password',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() =>
    import('./routes/(auth)/forgot-password.lazy').then((d) => d.Route),
  )

const authSignInRoute = authSignInImport.update({
  id: '/(auth)/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const authOtpRoute = authOtpImport.update({
  id: '/(auth)/otp',
  path: '/otp',
  getParentRoute: () => rootRoute,
} as any)

const auth500Route = auth500Import.update({
  id: '/(auth)/500',
  path: '/500',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRulesRouteRoute = AuthenticatedRulesRouteImport.update({
  id: '/rules',
  path: '/rules',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedLogsRouteRoute = AuthenticatedLogsRouteImport.update({
  id: '/logs',
  path: '/logs',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedIocsRouteRoute = AuthenticatedIocsRouteImport.update({
  id: '/iocs',
  path: '/iocs',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedAlertsRouteRoute = AuthenticatedAlertsRouteImport.update({
  id: '/alerts',
  path: '/alerts',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedRulesIndexRoute = AuthenticatedRulesIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRulesRouteRoute,
} as any)

const AuthenticatedCommandsIndexRoute = AuthenticatedCommandsIndexImport.update(
  {
    id: '/commands/',
    path: '/commands/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any,
)

const AuthenticatedAlertsIndexRoute = AuthenticatedAlertsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedAlertsRouteRoute,
} as any)

const AuthenticatedAgentsIndexRoute = AuthenticatedAgentsIndexImport.update({
  id: '/agents/',
  path: '/agents/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedAgentsRegisterIndexRoute =
  AuthenticatedAgentsRegisterIndexImport.update({
    id: '/agents/register/',
    path: '/agents/register/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/alerts': {
      id: '/_authenticated/alerts'
      path: '/alerts'
      fullPath: '/alerts'
      preLoaderRoute: typeof AuthenticatedAlertsRouteImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/iocs': {
      id: '/_authenticated/iocs'
      path: '/iocs'
      fullPath: '/iocs'
      preLoaderRoute: typeof AuthenticatedIocsRouteImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/logs': {
      id: '/_authenticated/logs'
      path: '/logs'
      fullPath: '/logs'
      preLoaderRoute: typeof AuthenticatedLogsRouteImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/rules': {
      id: '/_authenticated/rules'
      path: '/rules'
      fullPath: '/rules'
      preLoaderRoute: typeof AuthenticatedRulesRouteImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/(auth)/500': {
      id: '/(auth)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof auth500Import
      parentRoute: typeof rootRoute
    }
    '/(auth)/otp': {
      id: '/(auth)/otp'
      path: '/otp'
      fullPath: '/otp'
      preLoaderRoute: typeof authOtpImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordLazyImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-in-2': {
      id: '/(auth)/sign-in-2'
      path: '/sign-in-2'
      fullPath: '/sign-in-2'
      preLoaderRoute: typeof authSignIn2LazyImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-up': {
      id: '/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authSignUpLazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503LazyImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/agents/': {
      id: '/_authenticated/agents/'
      path: '/agents'
      fullPath: '/agents'
      preLoaderRoute: typeof AuthenticatedAgentsIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/alerts/': {
      id: '/_authenticated/alerts/'
      path: '/'
      fullPath: '/alerts/'
      preLoaderRoute: typeof AuthenticatedAlertsIndexImport
      parentRoute: typeof AuthenticatedAlertsRouteImport
    }
    '/_authenticated/commands/': {
      id: '/_authenticated/commands/'
      path: '/commands'
      fullPath: '/commands'
      preLoaderRoute: typeof AuthenticatedCommandsIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/rules/': {
      id: '/_authenticated/rules/'
      path: '/'
      fullPath: '/rules/'
      preLoaderRoute: typeof AuthenticatedRulesIndexImport
      parentRoute: typeof AuthenticatedRulesRouteImport
    }
    '/_authenticated/agents/register/': {
      id: '/_authenticated/agents/register/'
      path: '/agents/register'
      fullPath: '/agents/register'
      preLoaderRoute: typeof AuthenticatedAgentsRegisterIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedAlertsRouteRouteChildren {
  AuthenticatedAlertsIndexRoute: typeof AuthenticatedAlertsIndexRoute
}

const AuthenticatedAlertsRouteRouteChildren: AuthenticatedAlertsRouteRouteChildren =
  {
    AuthenticatedAlertsIndexRoute: AuthenticatedAlertsIndexRoute,
  }

const AuthenticatedAlertsRouteRouteWithChildren =
  AuthenticatedAlertsRouteRoute._addFileChildren(
    AuthenticatedAlertsRouteRouteChildren,
  )

interface AuthenticatedRulesRouteRouteChildren {
  AuthenticatedRulesIndexRoute: typeof AuthenticatedRulesIndexRoute
}

const AuthenticatedRulesRouteRouteChildren: AuthenticatedRulesRouteRouteChildren =
  {
    AuthenticatedRulesIndexRoute: AuthenticatedRulesIndexRoute,
  }

const AuthenticatedRulesRouteRouteWithChildren =
  AuthenticatedRulesRouteRoute._addFileChildren(
    AuthenticatedRulesRouteRouteChildren,
  )

interface AuthenticatedRouteRouteChildren {
  AuthenticatedAlertsRouteRoute: typeof AuthenticatedAlertsRouteRouteWithChildren
  AuthenticatedIocsRouteRoute: typeof AuthenticatedIocsRouteRoute
  AuthenticatedLogsRouteRoute: typeof AuthenticatedLogsRouteRoute
  AuthenticatedRulesRouteRoute: typeof AuthenticatedRulesRouteRouteWithChildren
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedAgentsIndexRoute: typeof AuthenticatedAgentsIndexRoute
  AuthenticatedCommandsIndexRoute: typeof AuthenticatedCommandsIndexRoute
  AuthenticatedAgentsRegisterIndexRoute: typeof AuthenticatedAgentsRegisterIndexRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedAlertsRouteRoute: AuthenticatedAlertsRouteRouteWithChildren,
  AuthenticatedIocsRouteRoute: AuthenticatedIocsRouteRoute,
  AuthenticatedLogsRouteRoute: AuthenticatedLogsRouteRoute,
  AuthenticatedRulesRouteRoute: AuthenticatedRulesRouteRouteWithChildren,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedAgentsIndexRoute: AuthenticatedAgentsIndexRoute,
  AuthenticatedCommandsIndexRoute: AuthenticatedCommandsIndexRoute,
  AuthenticatedAgentsRegisterIndexRoute: AuthenticatedAgentsRegisterIndexRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedRouteRouteWithChildren
  '/alerts': typeof AuthenticatedAlertsRouteRouteWithChildren
  '/iocs': typeof AuthenticatedIocsRouteRoute
  '/logs': typeof AuthenticatedLogsRouteRoute
  '/rules': typeof AuthenticatedRulesRouteRouteWithChildren
  '/500': typeof errors500LazyRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/forgot-password': typeof authForgotPasswordLazyRoute
  '/sign-in-2': typeof authSignIn2LazyRoute
  '/sign-up': typeof authSignUpLazyRoute
  '/401': typeof errors401LazyRoute
  '/403': typeof errors403LazyRoute
  '/404': typeof errors404LazyRoute
  '/503': typeof errors503LazyRoute
  '/': typeof AuthenticatedIndexRoute
  '/agents': typeof AuthenticatedAgentsIndexRoute
  '/alerts/': typeof AuthenticatedAlertsIndexRoute
  '/commands': typeof AuthenticatedCommandsIndexRoute
  '/rules/': typeof AuthenticatedRulesIndexRoute
  '/agents/register': typeof AuthenticatedAgentsRegisterIndexRoute
}

export interface FileRoutesByTo {
  '/iocs': typeof AuthenticatedIocsRouteRoute
  '/logs': typeof AuthenticatedLogsRouteRoute
  '/500': typeof errors500LazyRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/forgot-password': typeof authForgotPasswordLazyRoute
  '/sign-in-2': typeof authSignIn2LazyRoute
  '/sign-up': typeof authSignUpLazyRoute
  '/401': typeof errors401LazyRoute
  '/403': typeof errors403LazyRoute
  '/404': typeof errors404LazyRoute
  '/503': typeof errors503LazyRoute
  '/': typeof AuthenticatedIndexRoute
  '/agents': typeof AuthenticatedAgentsIndexRoute
  '/alerts': typeof AuthenticatedAlertsIndexRoute
  '/commands': typeof AuthenticatedCommandsIndexRoute
  '/rules': typeof AuthenticatedRulesIndexRoute
  '/agents/register': typeof AuthenticatedAgentsRegisterIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/_authenticated/alerts': typeof AuthenticatedAlertsRouteRouteWithChildren
  '/_authenticated/iocs': typeof AuthenticatedIocsRouteRoute
  '/_authenticated/logs': typeof AuthenticatedLogsRouteRoute
  '/_authenticated/rules': typeof AuthenticatedRulesRouteRouteWithChildren
  '/(auth)/500': typeof auth500Route
  '/(auth)/otp': typeof authOtpRoute
  '/(auth)/sign-in': typeof authSignInRoute
  '/(auth)/forgot-password': typeof authForgotPasswordLazyRoute
  '/(auth)/sign-in-2': typeof authSignIn2LazyRoute
  '/(auth)/sign-up': typeof authSignUpLazyRoute
  '/(errors)/401': typeof errors401LazyRoute
  '/(errors)/403': typeof errors403LazyRoute
  '/(errors)/404': typeof errors404LazyRoute
  '/(errors)/500': typeof errors500LazyRoute
  '/(errors)/503': typeof errors503LazyRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/agents/': typeof AuthenticatedAgentsIndexRoute
  '/_authenticated/alerts/': typeof AuthenticatedAlertsIndexRoute
  '/_authenticated/commands/': typeof AuthenticatedCommandsIndexRoute
  '/_authenticated/rules/': typeof AuthenticatedRulesIndexRoute
  '/_authenticated/agents/register/': typeof AuthenticatedAgentsRegisterIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/alerts'
    | '/iocs'
    | '/logs'
    | '/rules'
    | '/500'
    | '/otp'
    | '/sign-in'
    | '/forgot-password'
    | '/sign-in-2'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/503'
    | '/'
    | '/agents'
    | '/alerts/'
    | '/commands'
    | '/rules/'
    | '/agents/register'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/iocs'
    | '/logs'
    | '/500'
    | '/otp'
    | '/sign-in'
    | '/forgot-password'
    | '/sign-in-2'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/503'
    | '/'
    | '/agents'
    | '/alerts'
    | '/commands'
    | '/rules'
    | '/agents/register'
  id:
    | '__root__'
    | '/_authenticated'
    | '/_authenticated/alerts'
    | '/_authenticated/iocs'
    | '/_authenticated/logs'
    | '/_authenticated/rules'
    | '/(auth)/500'
    | '/(auth)/otp'
    | '/(auth)/sign-in'
    | '/(auth)/forgot-password'
    | '/(auth)/sign-in-2'
    | '/(auth)/sign-up'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/_authenticated/'
    | '/_authenticated/agents/'
    | '/_authenticated/alerts/'
    | '/_authenticated/commands/'
    | '/_authenticated/rules/'
    | '/_authenticated/agents/register/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  auth500Route: typeof auth500Route
  authOtpRoute: typeof authOtpRoute
  authSignInRoute: typeof authSignInRoute
  authForgotPasswordLazyRoute: typeof authForgotPasswordLazyRoute
  authSignIn2LazyRoute: typeof authSignIn2LazyRoute
  authSignUpLazyRoute: typeof authSignUpLazyRoute
  errors401LazyRoute: typeof errors401LazyRoute
  errors403LazyRoute: typeof errors403LazyRoute
  errors404LazyRoute: typeof errors404LazyRoute
  errors500LazyRoute: typeof errors500LazyRoute
  errors503LazyRoute: typeof errors503LazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  auth500Route: auth500Route,
  authOtpRoute: authOtpRoute,
  authSignInRoute: authSignInRoute,
  authForgotPasswordLazyRoute: authForgotPasswordLazyRoute,
  authSignIn2LazyRoute: authSignIn2LazyRoute,
  authSignUpLazyRoute: authSignUpLazyRoute,
  errors401LazyRoute: errors401LazyRoute,
  errors403LazyRoute: errors403LazyRoute,
  errors404LazyRoute: errors404LazyRoute,
  errors500LazyRoute: errors500LazyRoute,
  errors503LazyRoute: errors503LazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/(auth)/500",
        "/(auth)/otp",
        "/(auth)/sign-in",
        "/(auth)/forgot-password",
        "/(auth)/sign-in-2",
        "/(auth)/sign-up",
        "/(errors)/401",
        "/(errors)/403",
        "/(errors)/404",
        "/(errors)/500",
        "/(errors)/503"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated/route.tsx",
      "children": [
        "/_authenticated/alerts",
        "/_authenticated/iocs",
        "/_authenticated/logs",
        "/_authenticated/rules",
        "/_authenticated/",
        "/_authenticated/agents/",
        "/_authenticated/commands/",
        "/_authenticated/agents/register/"
      ]
    },
    "/_authenticated/alerts": {
      "filePath": "_authenticated/alerts/route.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/alerts/"
      ]
    },
    "/_authenticated/iocs": {
      "filePath": "_authenticated/iocs/route.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/logs": {
      "filePath": "_authenticated/logs/route.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/rules": {
      "filePath": "_authenticated/rules/route.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/rules/"
      ]
    },
    "/(auth)/500": {
      "filePath": "(auth)/500.tsx"
    },
    "/(auth)/otp": {
      "filePath": "(auth)/otp.tsx"
    },
    "/(auth)/sign-in": {
      "filePath": "(auth)/sign-in.tsx"
    },
    "/(auth)/forgot-password": {
      "filePath": "(auth)/forgot-password.lazy.tsx"
    },
    "/(auth)/sign-in-2": {
      "filePath": "(auth)/sign-in-2.lazy.tsx"
    },
    "/(auth)/sign-up": {
      "filePath": "(auth)/sign-up.lazy.tsx"
    },
    "/(errors)/401": {
      "filePath": "(errors)/401.lazy.tsx"
    },
    "/(errors)/403": {
      "filePath": "(errors)/403.lazy.tsx"
    },
    "/(errors)/404": {
      "filePath": "(errors)/404.lazy.tsx"
    },
    "/(errors)/500": {
      "filePath": "(errors)/500.lazy.tsx"
    },
    "/(errors)/503": {
      "filePath": "(errors)/503.lazy.tsx"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/agents/": {
      "filePath": "_authenticated/agents/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/alerts/": {
      "filePath": "_authenticated/alerts/index.tsx",
      "parent": "/_authenticated/alerts"
    },
    "/_authenticated/commands/": {
      "filePath": "_authenticated/commands/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/rules/": {
      "filePath": "_authenticated/rules/index.tsx",
      "parent": "/_authenticated/rules"
    },
    "/_authenticated/agents/register/": {
      "filePath": "_authenticated/agents/register/index.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
